import Head from 'next/head';
import styled from '@emotion/styled';

import { QueryClient, dehydrate, useQuery } from '@tanstack/react-query';
import Splash from '@/components/Main/Splash';
import { getCategoryList } from '@/apis/youtube/getCategoryList';
import Category from '@/components/Main/Category';
import { BANNER_DUMMY_DATA } from '@/constants/dummyData/banner';
import { BannerInformation } from '@/types/banner';
import Banner from '@/components/common/Banner/Banner';
import { useRef } from 'react';
import { GetServerSideProps } from 'next/types';

export default function Home() {
  const { data: categoryData, isLoading: isCategoryLoading } = useQuery(
    ['youtube', 'category'],
    getCategoryList,
    {
      enabled: false
    }
  );

  const bannerData: BannerInformation[] = BANNER_DUMMY_DATA;

  const categoryRef = useRef<HTMLDivElement>(null);

  return (
    <>
      <Head>
        <title>모먹지 · 오늘은 어떤 요리를 만들어 볼까?</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta
          property="og:image"
          content="https://self-dining.shop/images/meta/index_meta_image.png"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomeContainer>
        <Splash scrollTargetRef={categoryRef} />
        <CategoryContainer ref={categoryRef}>
          <Banner banners={bannerData} isLoading={false} />
          {categoryData && <Category data={categoryData} />}
        </CategoryContainer>
        <Empty></Empty>
      </HomeContainer>
    </>
  );
}
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const queryClient = new QueryClient();
  await queryClient.prefetchQuery(['youtube', 'category'], getCategoryList);
  return {
    props: {
      dehydratedState: dehydrate(queryClient)
    }
  };
};

const HomeContainer = styled.div`
  height: 100vh;
  overflow-y: scroll;
  scroll-snap-type: y mandatory;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;

  &::-webkit-scrollbar {
    width: 0px;
  }
`;

const CategoryContainer = styled.section`
  /* Scroll to 버튼을 덮어쓰기 */
  position: relative;
  z-index: 1;

  background-color: ${({ theme }) => theme.colors.gray[900]};
  scroll-snap-align: start;

  padding: 0;
  padding-top: 6rem;
  padding-bottom: 2rem;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  gap: 0;

  ${({ theme }) => theme.screen.desktop} {
    gap: 1.5rem;
  }
`;

export const MainContainer = styled.div`
  padding: 0;
  padding-bottom: 2rem;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  gap: 0;

  ${({ theme }) => theme.screen.desktop} {
    gap: 1.5rem;
  }
`;

const Empty = styled.div`
  scroll-snap-align: start;
`;
